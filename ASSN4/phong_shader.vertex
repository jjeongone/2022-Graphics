#version 330 core

layout (location = 0) in vec3 vPosition;
layout (location = 1) in vec3 vNormal;
layout (location = 2) in vec2 vTexCoord;

out vec3 fN;
out vec3 fE;
out vec3 fL;
out vec4 vertexColor;
out vec2 texCoord;

uniform mat4 Camera;
uniform mat4 Model;
uniform vec4 LightPosition;
uniform mat4 Projection;
uniform vec4 Color;

void main()
{
	mat4 ModelView = Camera * Model;
	fN = normalize((Camera * Model * vec4(vNormal, 0.0)).xyz);
	fE = -(Camera * Model * vec4(vPosition, 1.0)).xyz;

	if(LightPosition.w != 0.0) {
		fL = (Camera * vec4(LightPosition.xyz, 1.0)).xyz + fE;
	} else {
		fL = (Camera * LightPosition).xyz;
	}

	gl_Position = Projection * ModelView * vec4(vPosition, 1.0);
	vertexColor = Color;
	texCoord = vTexCoord;
}